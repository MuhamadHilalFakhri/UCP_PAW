<link rel="stylesheet" href="../public/css/product.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="container mt-5">
    <h1 class="text-center">Product List</h1>

    <!-- Form to Add New Product -->
    <form id="addProductForm" class="my-4">
        <div class="input-group">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">Add Product</button>
        </div>
    </form>

    <!-- List of produk (dynamically generated) -->
    <div id="productList" class="row row-cols-1 row-cols-md-3 g-4">
        <!-- Placeholder for product items -->
    </div>

    <!-- Add Product Modal -->
    <div id="addProductModal" class="modal fade" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addProductFormModal">
                        <div class="form-group">
                            <label for="newProductName">Product Name</label>
                            <input type="text" id="newProductName" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="newProductDescription">Description</label>
                            <input type="text" id="newProductDescription" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="newProductPrice">Price</label>
                            <input type="text" id="newProductPrice" class="form-control" required>
                        </div>
                        
                        <!-- Hidden file input, will be shown after clicking Add Product -->
                        <div id="fileInputContainer" style="display:none;">
                            <label for="newProductImage">Image</label>
                            <input type="file" id="newProductImage" name="image" class="form-control" accept="image/*" />
                        </div>

                        <button type="submit" class="btn btn-primary mt-3">Add Product</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Product Modal -->
    <div id="editModal" class="modal fade" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm">
                        <div class="form-group">
                            <label for="editProductName">Product Name</label>
                            <input type="text" id="editProductName" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="editProductDescription">Description</label>
                            <input type="text" id="editProductDescription" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="editProductPrice">Price</label>
                            <input type="text" id="editProductPrice" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-primary mt-3">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<footer class="footer">
    <div class="container text-center">
        <p>&copy; 2024 Product App. All Rights Reserved.</p>
    </div>
</footer>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let produk = [];
    const addProductForm = document.getElementById('addProductForm');
    const productListContainer = document.getElementById('productList');
    const addProductModal = new bootstrap.Modal(document.getElementById('addProductModal'));
    const fileInputContainer = document.getElementById('fileInputContainer');
    const addProductFormModal = document.getElementById('addProductFormModal');
    const editModal = new bootstrap.Modal(document.getElementById('editModal'));
    const editProductForm = document.getElementById('editProductForm');
    const editProductNameInput = document.getElementById('editProductName');
    const editProductDescriptionInput = document.getElementById('editProductDescription');
    const editProductPriceInput = document.getElementById('editProductPrice');
    let currentEditId = null;

    // Render produk
    function renderproduk() {
        productListContainer.innerHTML = '';
        produk.forEach(product => {
            const productCard = document.createElement('div');
            productCard.classList.add('col', 'product-card');
            productCard.innerHTML = `
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">${product.nama_produk}</h5>
                        <p class="card-text">${product.deskripsi}</p>
                        <p class="card-price">${product.harga}</p>
                        ${product.image_url ? `<img src="${product.image_url}" alt="Product Image" width="50" height="50" class="ml-2" />` : ''}
                        <button class="btn btn-sm btn-success editBtn" data-id="${product.id}">Edit</button>
                        <button class="btn btn-sm btn-danger deleteBtn" data-id="${product.id}">Delete</button>
                    </div>
                </div>
            `;
            productListContainer.appendChild(productCard);
        });

        // Attach event handlers for dynamic content
        $('.editBtn').on('click', function () {
            currentEditId = $(this).data('id');
            const product = produk.find(p => p.id === currentEditId);
            editProductNameInput.value = product.nama_produk;
            editProductDescriptionInput.value = product.deskripsi;
            editProductPriceInput.value = product.harga;
            editModal.show();
        });

        $('.deleteBtn').on('click', function () {
            const id = $(this).data('id');
            $.ajax({
                url: '/produk/' + id,
                type: 'DELETE',
                success: function () {
                    produk = produk.filter(product => product.id !== id);
                    renderproduk();
                }
            });
        });
    }

    // Show the file input after clicking Add Product
    $('#addProductModal').on('shown.bs.modal', function () {
        fileInputContainer.style.display = 'block'; // Show file input
        $('#newProductName').val(''); // Clear the product name input
        $('#newProductDescription').val(''); // Clear the description input
        $('#newProductPrice').val(''); // Clear the price input
        $('#newProductImage').val(''); // Clear the image input
    });

    // Add Product from Modal
    $('#addProductFormModal').on('submit', function (e) {
        e.preventDefault();
        const newProductName = $('#newProductName').val().trim();
        const newProductDescription = $('#newProductDescription').val().trim();
        const newProductPrice = $('#newProductPrice').val().trim();
        if (!newProductName || !newProductDescription || !newProductPrice) return;

        const image = $('#newProductImage')[0].files[0];
        const formData = new FormData();
        formData.append('nama_produk', newProductName);
        formData.append('deskripsi', newProductDescription);
        formData.append('harga', newProductPrice);
        if (image) formData.append('image', image);

        $.ajax({
            url: '/produk',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (newProduct) {
                produk.push(newProduct);
                renderproduk();
                $('#addProductModal').modal('hide');
                $('.modal-backdrop').remove(); // Remove the backdrop manually
                $('#addProductFormModal')[0].reset(); // Reset the form fields (name, description, price, image)
                fileInputContainer.style.display = 'none'; // Hide the file input after submitting
            },
            error: function (error) {
                console.error("Error adding product:", error.responseText);
            }
        });
    });

    // Update Product (from Edit Modal)
    $('#editProductForm').on('submit', function (e) {
        e.preventDefault();
        const updatedProductName = $('#editProductName').val().trim();
        const updatedProductDescription = $('#editProductDescription').val().trim();
        const updatedProductPrice = $('#editProductPrice').val().trim();
        if (!updatedProductName || !updatedProductDescription || !updatedProductPrice) return;

        $.ajax({
            url: '/produk/' + currentEditId,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify({
                nama_produk: updatedProductName,
                deskripsi: updatedProductDescription,
                harga: updatedProductPrice
            }),
            success: function () {
                const updatedProduct = produk.find(product => product.id === currentEditId);
                updatedProduct.nama_produk = updatedProductName;
                updatedProduct.deskripsi = updatedProductDescription;
                updatedProduct.harga = updatedProductPrice;
                renderproduk();
                editModal.hide();
                $('.modal-backdrop').remove(); // Remove the backdrop manually
            }
        });
    });

    // Initial fetch of produk
    $(document).ready(function () {
        $.get('/produk', function (data) {
            produk = data;
            renderproduk();
        });
    });

    // Remove the backdrop when the modal is hidden
    $('#addProductModal').on('hidden.bs.modal', function () {
        $('.modal-backdrop').remove(); // Ensure backdrop is removed
        $('#newProductName').val(''); // Clear the product name input field
        $('#newProductDescription').val(''); // Clear the description input field
        $('#newProductPrice').val(''); // Clear the price input field
        $('#newProductImage').val(''); // Clear the image input field
    });
</script>
